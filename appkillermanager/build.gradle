apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: "com.github.ben-manes.versions"
apply plugin: 'kotlinx-serialization'

android {
    compileSdkVersion 29

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 29
        versionCode rootProject.ext.libVersionCode
        versionName rootProject.ext.libVersionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        debug {

        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    implementation 'com.hypertrack:hyperlog:0.0.10'
    implementation 'androidx.annotation:annotation:1.1.0'

    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.13.0'

    // UI
    implementation "androidx.core:core-ktx:1.1.0"
    implementation "androidx.appcompat:appcompat:1.1.0"
    implementation "androidx.recyclerview:recyclerview:1.0.0"
    implementation 'com.github.michael-rapp:android-material-dialog:5.1.3'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta2'

    implementation 'com.google.code.gson:gson:2.8.5'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}

/*configurations.all {
    resolutionStrategy {
        force "androidx.recyclerview:recyclerview:$androidxVersion1"
        force "androidx.core:core:$androidxVersion1"
        force "androidx.annotation:annotation:1.0.1"
    }
}*/

dependencyUpdates.resolutionStrategy {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}

// applied specifically at the bottom
apply from: './scripts/bintrayConfig.gradle'